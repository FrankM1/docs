{"version":3,"sources":["webpack:///./src/components/setup/SetupBox.js","webpack:///./src/pages/setup.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["SetupBox","_ref","to","href","icon","iconClass","headingClass","title","children","react_default","a","createElement","common","className","radius","name","Spirit","h4","small","propTypes","PropTypes","node","isRequired","string","SetupPage","data","location","imageUrl","getMetaImageUrls","Fragment","meta","type","description","image","layout","mainClass","bodyClass","page","xl","sectionHeading","sectionSubHeading","setup_SetupBox","shape","site","siteMetadata","siteUrl","pathname","pageQuery","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","sameAsArray","length","join","profile_image","defaultProps","bool","ImageMeta","Helmet_default","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","wordpressPost","author","primary_author","seoImage","feature_image","meta_title","meta_description","excerpt","rel","og_title","og_description","date","modified","publicTags","map","keyword","i","key","twitter_title","twitter_description","slug","meta_ImageMeta","object","tags","arrayOf","visibility","primaryTag","ArticleMetaMD","post","markdownRemark","fm","frontmatter","publishedAtISODate","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","_ref2","url","resolve","meta_ArticleMetaGhost","meta_ArticleMetaMD","meta_WebsiteMeta","SITEURL","process","SITE_URL","imageUrls","faq","integrations","tutorials","default","section","proptypes","__webpack_require__","d","__webpack_exports__","meta_MetaData","meta_getMetaImageUrls"],"mappings":"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","file":"component---src-pages-setup-js-53fd641af32bd16891ce.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Box, Icon } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst SetupBox = ({ to, href, icon, iconClass, headingClass, title, children }) => (\n    <Box\n        to={to}\n        href={href}\n        className=\"col-12 col-6-ns col-4-l pa8 tdn black setup-box-min-height\"\n        radius=\"4\"\n    >\n        <Icon name={icon} className={iconClass} />\n        <h4 className={`${Spirit.h4} darkgrey ${headingClass}`}>{title}</h4>\n        <div className={`${Spirit.small} mt1 midgrey`}>{children}</div>\n    </Box>\n)\n\nSetupBox.propTypes = {\n    children: PropTypes.node.isRequired,\n    icon: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    to: PropTypes.string,\n    href: PropTypes.string,\n    iconClass: PropTypes.string,\n    headingClass: PropTypes.string,\n}\n\nexport default SetupBox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { Spirit } from '../styles/spirit-styles'\nimport { Layout } from '../components/common/layout'\nimport { SetupBox } from '../components/setup'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\n\nconst SetupPage = ({ data, location }) => {\n    // Add meta title and description for this page here to overwrite the site meta data as set in the config\n    const title = `How To Install Qazana: Setup & Configuration - Open Source Publishing`\n    const description = `All the tools you need to get started with Qazana 👉Self-hosted install & setup, local install guide for development, contribution guidelines & premium hosted services!`\n    const imageUrl = getMetaImageUrls()\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title || data.site.siteMetadata.title}\n                description={description || data.site.siteMetadata.description}\n                image={imageUrl}\n            />\n            <Layout mainClass=\"bg-whitegrey-l2 pb-vw3\" bodyClass=\"bg-white\">\n                <section className=\"bg-setup\">\n                    <div className={`${Spirit.page.xl} tc-ns pt-vw6 pt-vw5-ns pb-vw5 white`}>\n                        <h1 className={`${Spirit.sectionHeading} gh-integration-header-shadow`}>Setup Guide</h1>\n                        <p className={Spirit.sectionSubHeading}>\n                            The easiest way to get started is to use <strong>Qazana(Pro)</strong>. If you prefer to self-host, we strongly recommend an Ubuntu server with at least 1GB of memory to run Qazana.\n                        </p>\n                    </div>\n                </section>\n\n                <div className={`${Spirit.page.xl} mt-vw3`}>\n                    <section className=\"grid-12 gutter-row-20 gutter-20-ns gutter-36-l\">\n                        <SetupBox href=\"https://qazana.net/pricing/\" title=\"Qazana(Pro)\" icon=\"ghost-pro-logo\" iconClass=\"w9 h9\" headingClass=\"mt2\">\n                            <strong>Feature packed version</strong> with 1-click templates, integrations and elements\n                        </SetupBox>\n\n                        <SetupBox to=\"/install/manual/\" title=\"FTP\" icon=\"ubuntu-logo\" iconClass=\"w8 h8\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                A full guide for installing Qazana on using ftp\n                            </p>\n                        </SetupBox>\n\n                        <SetupBox to=\"/install/automatic/\" title=\"Install from the WordPress plugin repository\" icon=\"github-outline\" iconClass=\"fill-darkgrey w8 h8\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>The fastest and easiest way to use Qazana on an existing WordPress website.</p>\n                        </SetupBox>\n                    </section>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nSetupPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default SetupPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://qazana.net/`,\n            `https://twitter.com/ghost/`,\n            `https://www.facebook.com/ghost/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Qazana`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { wordpressPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(wordpressPost.primary_author, fetchAuthorData)\n    const primaryTag = { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && wordpressPost.feature_image) ? wordpressPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{wordpressPost.meta_title || title || wordpressPost.title}</title>\n                <meta name=\"description\" content={wordpressPost.meta_description || wordpressPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        wordpressPost.og_title ||\n                        title ||\n                        wordpressPost.meta_title ||\n                        wordpressPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        wordpressPost.og_description ||\n                        wordpressPost.excerpt ||\n                        wordpressPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={wordpressPost.date} />\n                <meta property=\"article:modified_time\" content={wordpressPost.modified} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        wordpressPost.twitter_title ||\n                        title ||\n                        wordpressPost.meta_title ||\n                        wordpressPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        wordpressPost.twitter_description ||\n                        wordpressPost.excerpt ||\n                        wordpressPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${wordpressPost.meta_title || title || wordpressPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${wordpressPost.date}\",\n                        \"dateModified\": \"${wordpressPost.modified}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${wordpressPost.meta_description || wordpressPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Qazana\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.qazana.net/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        wordpressPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            date: PropTypes.string.isRequired,\n            modified: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport ImageMeta from './ImageMeta'\nimport { getMetaImageUrls } from '.'\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Qazana\",\n                            \"sameAs\": [\n                                \"https://qazana.net/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/tryghost/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Qazana\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://blog.qazana.net/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nimport ImageMeta from './ImageMeta'\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={image} />\n        </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Qazana\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.qazana.net/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n\n    const { wordpressPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (wordpressPost) {\n            return (\n                <ArticleMetaGhost\n                    data={data}\n                    canonical={canonical}\n                    fetchAuthorData={fetchAuthorData}\n                    title={title}\n                    image={image}\n                    overwriteDefaultImage={overwriteDefaultImage}\n                />\n            )\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        wordpressPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types'\nimport url from 'url'\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.qazana.net`\n\nconst imageUrls = {\n    faq: url.resolve(SITEURL, `/images/meta/Qazana-FAQ.jpg`),\n    integrations: url.resolve(SITEURL, `/images/meta/Qazana-Integrations.jpg`),\n    tutorials: url.resolve(SITEURL, `/images/meta/Qazana-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/Qazana-Docs.jpg`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}