{"version":3,"sources":["webpack:///./src/components/home/HomeHeaderBox.js","webpack:///./src/components/home/HomeHeader.js","webpack:///./src/components/home/HomeAPIBox.js","webpack:///./src/components/home/HomeFAQLink.js","webpack:///./src/pages/index.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["HomeHeaderBox","_ref","to","title","color","icon","children","react_default","a","createElement","gatsby_browser_entry","className","common","name","Spirit","h4","small","propTypes","PropTypes","string","isRequired","node","HomeHeader","theme","page","xl","search","isHome","home_HomeHeaderBox","HomeAPIBox","h5","HomeFAQLink","__webpack_require__","d","__webpack_exports__","pageQuery","HomePage","data","location","imageUrl","getMetaImageUrls","Fragment","meta","type","description","image","layout","headerDividerStyle","bodyClass","mainClass","header","home_HomeHeader","h3","elevation","home_HomeAPIBox","home_HomeFAQLink","p","shape","site","siteMetadata","siteUrl","pathname","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","sameAsArray","length","join","profile_image","defaultProps","bool","ImageMeta","Helmet_default","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","wordpressPost","author","primary_author","seoImage","feature_image","meta_title","meta_description","excerpt","rel","href","og_title","og_description","date","modified","publicTags","map","keyword","i","key","twitter_title","twitter_description","slug","meta_ImageMeta","object","tags","arrayOf","visibility","primaryTag","ArticleMetaMD","post","markdownRemark","fm","frontmatter","publishedAtISODate","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","_ref2","url","resolve","meta_ArticleMetaGhost","meta_ArticleMetaMD","meta_WebsiteMeta","SITEURL","process","SITE_URL","imageUrls","faq","integrations","tutorials","default","section","proptypes","meta_MetaData","meta_getMetaImageUrls"],"mappings":"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","file":"component---src-pages-index-js-bc2d254dada0500992c8.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { Icon } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst HomeHeaderBox = ({ to, title, color, icon, children }) => (\n    <Link to={to} className=\"col-12 col-4-ns pa5 pa8-ns pa10-l pt8-l flex flex-column-ns items-start tdn content-stretch home-main-box-shadow db br4 bg-white\">\n        <Icon name={icon} className={`w10 h-auto w12-ns stroke-w--1-5 mr3 mb2 stroke-${color}`} />\n        <div className=\"flex flex-column justify-between flex-auto\">\n            <div>\n                <h2 className={`${Spirit.h4} mt0 mb2 mt2-ns darkgrey flex-shrink-1`}>{title}</h2>\n                <p className={`${Spirit.small} midgrey`}>{children}</p>\n            </div>\n            <span className={`${color} dib mt2 link fw5 f7 f5-ns flex items-center`}>\n                Learn more\n                <Icon name=\"arrow-right\" className={`w3 h3 ml2 fill-${color}`} />\n            </span>\n        </div>\n    </Link>\n)\n\nHomeHeaderBox.propTypes = {\n    to: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default HomeHeaderBox\n","import React from 'react'\n\nimport { SearchModal } from '../common/search'\nimport { NavBar } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\nimport HomeHeaderBox from './HomeHeaderBox'\n\n// Custom headings must be React components. You should include the <NavBar /> component\n// somewhere in it. You can optionally set the theme of the navbar to `dark` or `light`.\nconst HomeHeader = () => (\n    <div className=\"gh-bg-home bb b--whitegrey\">\n        <header className=\"top-0 left-0 right-0 z-9999\">\n            <NavBar theme=\"light\" />\n        </header>\n        <div className={`${Spirit.page.xl} pb5 pt10 pt15-ns pt20-l pb10-ns pb15-l flex flex-column items-center bt bn-ns b--white-10`}>\n            <h1 className=\"ma0 pa0 f2 f1-ns f-headline-l white header-heading-shadow\">Qazana Documentation</h1>\n            <SearchModal isHome />\n\n            <section className=\"grid-12 gutter-row-20 gutter-36-ns mt10 mt20-ns mt25-l miw-100 miw-auto-ns home-main-box-margin-ns z-999\">\n                <HomeHeaderBox\n                    to=\"/concepts/introduction/\"\n                    title=\"Core Concepts\"\n                    icon=\"blocks\"\n                    color=\"purple\"\n                >\n                    Understand the fundamentals of Qazana development.\n                </HomeHeaderBox>\n\n                <HomeHeaderBox\n                    to=\"/setup/\"\n                    title=\"Setup Guide\"\n                    icon=\"rocket\"\n                    color=\"purple\"\n                >\n                    Setting up a Qazana site on a server or locally.\n                </HomeHeaderBox>\n\n                <HomeHeaderBox\n                    to=\"/tutorials/\"\n                    title=\"Tutorials\"\n                    icon=\"typing\"\n                    color=\"tutorial-green\"\n                >\n                    Browse tutorials for most common setup and development use-cases.\n                </HomeHeaderBox>\n            </section>\n        </div>\n    </div>\n)\n\nexport default HomeHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { Spirit } from '../../styles/spirit-styles'\nimport { Icon } from '../common'\n\nconst HomeAPIBox = ({ to, icon, title, children }) => (\n    <Link to={to} className=\"flex items-start pa4 pa7-ns tdn bb b--whitegrey justify-between mih-10 flex-auto api-box\">\n        <span className=\"dib mr3 mt3 miw10 tc\"><Icon name={icon} className=\"stroke-black-l2\" /></span>\n        <div className=\"flex-auto\">\n            <h4 className={`${Spirit.h5} darkgrey mt2 mt0-l`}>{title}</h4>\n            <p className={`${Spirit.small} midgrey`}>{children}</p>\n        </div>\n    </Link>\n)\n\nHomeAPIBox.propTypes = {\n    to: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default HomeAPIBox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst HomeFAQLink = ({ to, title, children }) => (\n    <Link to={to} className=\"midgrey home-faq-question link dib pt1 pb5\">\n        <h4 className={`${Spirit.h5} purple dib`}>{title} &raquo;</h4>\n        <p className={`${Spirit.small} mt0`}>{children}</p>\n    </Link>\n)\n\nHomeFAQLink.propTypes = {\n    to: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default HomeFAQLink\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport { Icon, Box } from '../components/common'\nimport { Layout } from '../components/common/layout'\nimport { HomeHeader, HomeAPIBox, HomeFAQLink } from '../components/home'\nimport { Spirit } from '../styles/spirit-styles'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\n\nconst HomePage = ({ data, location }) => {\n    // Add meta title and description for this page here to overwrite the site meta data as set in the config\n    const title = `Qazana Documentation`\n    const description = `Get familiar with Qazana - the open source professional publishing platform.  Install guides, tutorials, API docs and FAQs.`\n    const imageUrl = getMetaImageUrls()\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title}\n                description={description}\n                image={imageUrl}\n            />\n            <Layout\n                headerDividerStyle=\"shadow\"\n                bodyClass=\"bg-white\"\n                mainClass=\"bg-whitegrey-l2 pb-vw6 pb-vw3-ns\"\n                header={<HomeHeader />}\n            >\n                <div className=\"pt-vw3 home-main-box-padding-ns\">\n                    <div className={`${Spirit.page.xl} grid-12 gutter-row-20 gutter-40-ns`}>\n\n                        <section className=\"col-12 col-6-ns flex flex-column justify-between mt4 mt0-ns\">\n                            <Link to=\"/api/\" className={`${Spirit.h3} link darkgrey hover-midgrey flex-grow-0`}>API Reference</Link>\n\n                            <Box className=\"mt5 tdn flex-auto flex flex-column items-stretch\" elevation=\"1\">\n                                <HomeAPIBox\n                                    to=\"/api/#frontend-sdk\"\n                                    title=\"Elements\"\n                                    icon=\"sdks\"\n                                >\n                                    Getting started with Qazana on your website\n                                </HomeAPIBox>\n                                <HomeAPIBox\n                                    to=\"/api/#rest-api\"\n                                    title=\"Templates\"\n                                    icon=\"rest-api\"\n                                >\n                                    A detailed overview of the how Qazana works\n                                </HomeAPIBox>\n                                <HomeAPIBox\n                                    to=\"/api/#tools\"\n                                    title=\"Tools\"\n                                    icon=\"tools\"\n                                >\n                                    Utilities to help use and manage Qazana\n                                </HomeAPIBox>\n                            </Box>\n                        </section>\n\n                        <section className=\"col-12 col-6-ns mt0-ns bt bn-ns b--whitegrey nl5 nr5 nl0-ns nr0-ns ml0-ns mr0-ns pl5 pr5 pl0-ns pr0-ns pt5 pt0-ns \">\n                            <Link to=\"/faq/\" className={`${Spirit.h3} link darkgrey hover-midgrey`}>FAQ</Link>\n                            <div className=\"mt3 mt7-ns\">\n                                <HomeFAQLink to=\"/faq/upgrade-to-ghost-2-0/\" title=\"Upgrade to Qazana 2.0\">\n                                    Qazana 2.0 was released in September 2018 and the second major upgrade since the platform launched. Learn how to upgrade\n                                </HomeFAQLink>\n\n                                <HomeFAQLink to=\"/faq/using-custom-domains/\" title=\"Using Custom Domains\">\n                                    Map any domain you own directly to your Qazana(Pro) publication and make your site more memorable!\n                                </HomeFAQLink>\n\n                                <HomeFAQLink to=\"/faq/upgrading-from-deprecated-ghost-cli/\" title=\"Upgrading from deprecated Qazana CLI\">\n                                    If you are using a deprecated version and need to upgrade in order to upgrade or manage your Qazana site, some extra steps may be required.\n                                </HomeFAQLink>\n\n                                <Link to=\"/faq/\" className={`${Spirit.p} midgrey fw5 link hover-purple`}>More FAQ...</Link>\n                            </div>\n                        </section>\n                    </div>\n\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nHomePage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default HomePage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://qazana.net/`,\n            `https://twitter.com/ghost/`,\n            `https://www.facebook.com/ghost/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Qazana`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { wordpressPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(wordpressPost.primary_author, fetchAuthorData)\n    const primaryTag = { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && wordpressPost.feature_image) ? wordpressPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{wordpressPost.meta_title || title || wordpressPost.title}</title>\n                <meta name=\"description\" content={wordpressPost.meta_description || wordpressPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        wordpressPost.og_title ||\n                        title ||\n                        wordpressPost.meta_title ||\n                        wordpressPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        wordpressPost.og_description ||\n                        wordpressPost.excerpt ||\n                        wordpressPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={wordpressPost.date} />\n                <meta property=\"article:modified_time\" content={wordpressPost.modified} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        wordpressPost.twitter_title ||\n                        title ||\n                        wordpressPost.meta_title ||\n                        wordpressPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        wordpressPost.twitter_description ||\n                        wordpressPost.excerpt ||\n                        wordpressPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${wordpressPost.meta_title || title || wordpressPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${wordpressPost.date}\",\n                        \"dateModified\": \"${wordpressPost.modified}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${wordpressPost.meta_description || wordpressPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Qazana\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.qazana.net/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        wordpressPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            date: PropTypes.string.isRequired,\n            modified: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport ImageMeta from './ImageMeta'\nimport { getMetaImageUrls } from '.'\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Qazana\",\n                            \"sameAs\": [\n                                \"https://qazana.net/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/tryghost/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Qazana\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://blog.qazana.net/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nimport ImageMeta from './ImageMeta'\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={image} />\n        </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Qazana\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.qazana.net/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n\n    const { wordpressPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (wordpressPost) {\n            return (\n                <ArticleMetaGhost\n                    data={data}\n                    canonical={canonical}\n                    fetchAuthorData={fetchAuthorData}\n                    title={title}\n                    image={image}\n                    overwriteDefaultImage={overwriteDefaultImage}\n                />\n            )\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        wordpressPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types'\nimport url from 'url'\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.qazana.net`\n\nconst imageUrls = {\n    faq: url.resolve(SITEURL, `/images/meta/Qazana-FAQ.jpg`),\n    integrations: url.resolve(SITEURL, `/images/meta/Qazana-Integrations.jpg`),\n    tutorials: url.resolve(SITEURL, `/images/meta/Qazana-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/Qazana-Docs.jpg`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}