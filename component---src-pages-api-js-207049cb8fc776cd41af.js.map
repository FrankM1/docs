{"version":3,"sources":["webpack:///./src/components/api/APICard.js","webpack:///./src/pages/api.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["APICard","_ref","to","href","icon","img","iconClass","children","react_default","a","createElement","common","className","elevation","name","src","propTypes","PropTypes","string","node","isRequired","APIPage","data","location","imageUrl","getMetaImageUrls","sectionStyles","Fragment","meta","type","title","description","image","layout","mainClass","bodyClass","Spirit","page","xl","sectionHeading","sectionSubHeading","l","id","h3","small","api_APICard","shape","site","siteMetadata","siteUrl","pathname","pageQuery","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","sameAsArray","length","join","profile_image","defaultProps","bool","ImageMeta","Helmet_default","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","wordpressPost","author","primary_author","seoImage","feature_image","meta_title","meta_description","excerpt","rel","og_title","og_description","date","modified","publicTags","map","keyword","i","key","twitter_title","twitter_description","slug","meta_ImageMeta","object","tags","arrayOf","visibility","primaryTag","ArticleMetaMD","post","markdownRemark","fm","frontmatter","publishedAtISODate","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","_ref2","url","resolve","meta_ArticleMetaGhost","meta_ArticleMetaMD","meta_WebsiteMeta","SITEURL","process","SITE_URL","imageUrls","faq","integrations","tutorials","default","section","proptypes","__webpack_require__","d","__webpack_exports__","meta_MetaData","meta_getMetaImageUrls"],"mappings":"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","file":"component---src-pages-api-js-207049cb8fc776cd41af.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Icon, Box } from '../common'\n\nconst APICard = ({ to, href, icon, img, iconClass, children }) => (\n    <Box\n        to={to || null}\n        href={href}\n        className=\"br4 flex flex-column justify-between items-center black pa2 pt8 pb5 tdn\"\n        elevation={!href && !to ? `1` : `2`}\n    >\n        {icon ? <div className=\"w10 h10 flex justify-center items-center\"><Icon name={icon} className={`w10 h10 mb4 ${iconClass}`}></Icon></div> : null}\n        {img ? <div className=\"w10 h10 flex justify-center items-center\"><img src={img} className=\"nudge-bottom--4\" /></div> : null}\n        <span className={(!to && !href ? `o-50` : ``)}>{children}</span>\n    </Box>\n)\n\nAPICard.propTypes = {\n    to: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    img: PropTypes.string,\n    iconClass: PropTypes.string,\n    children: PropTypes.node.isRequired,\n}\n\nexport default APICard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { Spirit } from '../styles/spirit-styles'\nimport { Layout } from '../components/common/layout'\nimport { APICard } from '../components/api'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\n\nconst APIPage = ({ data, location }) => {\n    // Add meta title and description or this page here to overwrite the site meta data as set in the config\n    const title = `API Reference - Qazana`\n    const description = `Comprehensive documentation of API clients, tools and libraries for working with Qazana.`\n    const imageUrl = getMetaImageUrls()\n\n    const sectionStyles = {\n        headingContainer: `col-12 col-4-ns mr10-ns`,\n        cardContainer: `col-12 col-8-ns mt-vw4 mt0-ns grid-icon-boxes`,\n    }\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title}\n                description={description}\n                image={imageUrl}\n            />\n            <Layout mainClass=\"bg-whitegrey-l2\" bodyClass=\"bg-white\">\n                <section className=\"bg-api-reference\">\n                    <div className={`${Spirit.page.xl} tc-ns pt-vw6 pt-vw5-ns pb-vw5 white`}>\n                        <h1 className={`${Spirit.sectionHeading} gh-integration-header-shadow`}>API Reference</h1>\n                        <p className={Spirit.sectionSubHeading}>Clients, tools and libraries for working with Qazana</p>\n                    </div>\n                </section>\n\n                <div className={`${Spirit.page.l} pb-vw4 pb-vw3-ns pt-vw4 pt-vw3-ns`}>\n                    <div className=\"grid-12\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"frontend-sdk\" className={`${Spirit.h3} pt20 nt20`}>Frontend Frameworks</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Frameworks for working with the Qazana API to build a publication website</p>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard to=\"/api/handlebars-themes/\" icon=\"ghostache\">Qazana Themes</APICard>\n                            <APICard to=\"/api/gatsby/\" icon=\"gatsby-logo\">Gatsby</APICard>\n                        </div>\n                    </div>\n\n                    <div className=\"grid-12 mt-vw4 mt20-ns\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"rest-api\" className={`${Spirit.h3} pt20 nt20`}>REST API</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>A full reference of API Endpoints</p>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard to=\"/api/content/\" icon=\"content-api-logo\">Content API</APICard>\n                            <APICard to=\"/api/admin/\" icon=\"admin-api-logo\">Admin API</APICard>\n                            <APICard to=\"/api/webhooks/\" icon=\"webhooks-logo\">Webhooks</APICard>\n                        </div>\n                    </div>\n\n                    <div className=\"grid-12 mt-vw4 mt20-ns\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"tools\" className={`${Spirit.h3} pt20 nt20`}>Tools</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Utilities to help build and manage Qazana</p>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard to=\"/api/ghost-cli/\" icon=\"ghost-cli-logo\">Qazana-CLI</APICard>\n                            <APICard to=\"/api/migration/\" icon=\"migration-logo\">Migration</APICard>\n                            <APICard href=\"https://gscan.qazana.net\" icon=\"gscan-logo\">GScan</APICard>\n                            <APICard to=\"/api/javascript/sdk/\" icon=\"javascript-logo\">JavaScript SDK</APICard>\n                        </div>\n                    </div>\n\n                    <div className=\"grid-12 mt-vw4 mt20-ns\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"client-libraries\" className={`${Spirit.h3} pt20 nt18`}>Client Libraries</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Specific libraries for interacting with the Qazana API directly</p>\n                            <h4 className=\"f-supersmall dib ma0 pa0 bg-green pa1 br-pill pl3 pr3 tc white mt2 nudge-top--2\">Coming soon</h4>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard to=\"/api/javascript/\" icon=\"javascript-logo\">JavaScript</APICard>\n                            <APICard icon=\"ruby-logo\" iconClass=\"stroke-midlightgrey o-30\">Ruby</APICard>\n                            <APICard icon=\"php-logo\" iconClass=\"stroke-midlightgrey o-30\">PHP</APICard>\n                            <APICard icon=\"python-logo\" iconClass=\"stroke-midlightgrey o-30\">Python</APICard>\n                            <APICard icon=\"apple-logo\" iconClass=\"stroke-midlightgrey o-30\">iOS</APICard>\n                            <APICard icon=\"android-logo\" iconClass=\"stroke-midlightgrey o-30\">Android</APICard>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nAPIPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default APIPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://qazana.net/`,\n            `https://twitter.com/ghost/`,\n            `https://www.facebook.com/ghost/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Qazana`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { wordpressPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(wordpressPost.primary_author, fetchAuthorData)\n    const primaryTag = { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && wordpressPost.feature_image) ? wordpressPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{wordpressPost.meta_title || title || wordpressPost.title}</title>\n                <meta name=\"description\" content={wordpressPost.meta_description || wordpressPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        wordpressPost.og_title ||\n                        title ||\n                        wordpressPost.meta_title ||\n                        wordpressPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        wordpressPost.og_description ||\n                        wordpressPost.excerpt ||\n                        wordpressPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={wordpressPost.date} />\n                <meta property=\"article:modified_time\" content={wordpressPost.modified} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        wordpressPost.twitter_title ||\n                        title ||\n                        wordpressPost.meta_title ||\n                        wordpressPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        wordpressPost.twitter_description ||\n                        wordpressPost.excerpt ||\n                        wordpressPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${wordpressPost.meta_title || title || wordpressPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${wordpressPost.date}\",\n                        \"dateModified\": \"${wordpressPost.modified}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${wordpressPost.meta_description || wordpressPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Qazana\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.qazana.net/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        wordpressPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            date: PropTypes.string.isRequired,\n            modified: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport ImageMeta from './ImageMeta'\nimport { getMetaImageUrls } from '.'\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Qazana\",\n                            \"sameAs\": [\n                                \"https://qazana.net/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/tryghost/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Qazana\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://blog.qazana.net/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nimport ImageMeta from './ImageMeta'\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={image} />\n        </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Qazana\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.qazana.net/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n\n    const { wordpressPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (wordpressPost) {\n            return (\n                <ArticleMetaGhost\n                    data={data}\n                    canonical={canonical}\n                    fetchAuthorData={fetchAuthorData}\n                    title={title}\n                    image={image}\n                    overwriteDefaultImage={overwriteDefaultImage}\n                />\n            )\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        wordpressPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types'\nimport url from 'url'\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.qazana.net`\n\nconst imageUrls = {\n    faq: url.resolve(SITEURL, `/images/meta/Qazana-FAQ.jpg`),\n    integrations: url.resolve(SITEURL, `/images/meta/Qazana-Integrations.jpg`),\n    tutorials: url.resolve(SITEURL, `/images/meta/Qazana-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/Qazana-Docs.jpg`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}