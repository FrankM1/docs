{"data":{"site":{"siteMetadata":{"title":"Qazana Documentation","siteUrl":"https://docs.qazana.net","description":"Everything you need to know about working with the Qazana professional publishing platform."}},"allWordpressWpTutorials":{"edges":[{"node":{"id":"65e7062d-fc61-5869-b10e-1d00491a921d","title":"Add Google Custom Search to Ghost","slug":"tutorial-2","content":"\n<p>Add search functionality to your Ghost publication and allow your readers to find exactly what they are looking for<br></p>\n\n\n\n<h3 id=\"overview\">Overview</h3>\n\n\n\n<p>Adding search to your Ghost publication gives your readers an additional way to navigate your content and improves engagement. It&#8217;s possible to add a sensible search function using the free&nbsp;<a href=\"https://cse.google.com/cse/\">Google Custom Search</a>&nbsp;tool. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\n\n\n\n<p>This is possible using the Handlebars theme layer &#8211; by using the code provided by Google Custom Search in your theme files. This tutorial will show you how to implement site search on your Ghost publication.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>If you&#8217;re looking for a free tool to add site search then this is an ideal solution. However it&#8217;s important to note that it does come with some limitations with search functionality, custom styles and ads.</p></blockquote>\n\n\n\n<h2 id=\"create-a-new-search-engine-in-the-google-custom-search-tool\">Create a new search engine in the Google Custom Search tool</h2>\n\n\n\n<p>Login to the Google Custom Search tool using Google credentials and create a new search engine. Enter the domain for your Ghost site:</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://docs.ghost.io/content/images/2018/11/Create-a-Custom-Google-Search-tool.png\" alt=\"\"/></figure>\n\n\n\n<h2 id=\"copy-the-code-provided\">Copy the code provided</h2>\n\n\n\n<p>Once you&#8217;ve entered your domain and any other custom settings required (useful if you want to only search certain parts of your site, or exclude pages), grab the code for your new search function:</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://docs.ghost.io/content/images/2018/11/Google-Custom-Search-Snippet.png\" alt=\"\"/></figure>\n\n\n\n<h2 id=\"add-the-code-to-your-theme-files\">Add the code to your theme files</h2>\n\n\n\n<p>This code can be pasted any where in Ghost depending on how you&#8217;d like to render your search box &#8211; this could be in your posts, on specific pages or across your whole site.</p>\n\n\n\n<p>Open your theme files in your code editor of choice and find the best spot for your search bar. &nbsp;For the purposes of this example, we&#8217;re going to put the code into the&nbsp;<code>index.hbs</code>, directly below the header and above the main content area:</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://docs.ghost.io/content/images/2018/11/Google-Custom-Search-in-Index.png\" alt=\"\"/></figure>\n\n\n\n<p>It&#8217;s a good idea to make one small modification to the code provided by the Google Custom Search tool, which is to add a&nbsp;<code>&lt;div&gt;</code>&nbsp;around&nbsp;<code>&lt;gcse:search&gt;&lt;/gcse:search&gt;</code>&nbsp;so that you can add some custom CSS later if required.</p>\n\n\n\n<h2 id=\"customise-your-search-bar\">Customise your search bar</h2>\n\n\n\n<p>The Google Custom Search tool gives you plenty of customisation options within the dashboard once you have created your search engine. It&#8217;s advisable to spend some time navigating around all of the options available to you so that you understand the full capabilities and limitations of using this tool to implement search on your Ghost publication.</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://docs.ghost.io/content/images/2018/11/Customise-Google-Custom-Search.png\" alt=\"\"/></figure>\n\n\n\n<p>You can style the way the search bar and the results looks, and add or remove the Google branding. There are also several options to customise the behaviour of your search functionality. The tool gives a preview so that you can see the results as you make adjustments and you can come back to this any time and update it.</p>\n\n\n\n<h2 id=\"update-your-active-theme\">Update your active theme</h2>\n\n\n\n<p>By now you should have added the code snippet to your theme files and started customising the behaviour and style of your search engine. Now it&#8217;s time to give this thing a test run.</p>\n\n\n\n<p>Save your updated theme files and upload the&nbsp;<code>.zip</code>&nbsp;file in the design menu in Ghost Admin. You should now be able to see the search bar on your site!</p>\n\n\n\n<p>Here&#8217;s an example of what an implementation of Google Custom Search looks like on&nbsp;<a href=\"https://blog.codinghorror.com/\">Coding Horror</a>:</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://docs.ghost.io/content/images/2018/11/Google-Custom-Search-on-Coding-Horror.png\" alt=\"\"/></figure>\n\n\n\n<h2 id=\"further-customisation\">Further customisation</h2>\n\n\n\n<p>Since we&#8217;re inserting Google&#8217;s tool via a script, there are two ways that you can adjust the way it appears on your site. First of all you can go back into the customisation menu on the Google Custom Search dashboard and try different themes or tweak the settings. Hit refresh and you&#8217;ll be able to see these updates in real time on your site.</p>\n\n\n\n<p>Secondly, you can style the search bar yourself with HTML and CSS. Since we added a&nbsp;<code>&lt;div&gt;</code>&nbsp;to the code earlier, you can add some custom CSS to the&nbsp;<code>screen.css</code>&nbsp;file in your theme. For example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>.gse-searchbox {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    max-width: 400px;\n}</code></pre>\n\n\n\n<p>The rest is up to you! Always remember to update the active theme in Ghost Admin each time you are ready to ship changes to your CSS files ðŸ”§</p>\n\n\n\n<h3 id=\"summary\">Summary</h3>\n\n\n\n<p>You&#8217;ve completed the tutorial and hopefully deployed a search box on your Ghost publication, powered by Google&#8217;s custom search tool. Your search bar can be added to any post or page on your site repeating the same process and adding the code into the relevant Handlebars template files. Don&#8217;t forget you can use the&nbsp;<a href=\"https://docs.ghost.org/api/handlebars-themes/\">Handlebars documentation</a>anytime to learn more about themes!</p>\n","excerpt":"<p>This is an excerpt</p>\n"}},{"node":{"id":"d6c79de6-33f1-5e44-b30a-c707edd90dd8","title":"How to make an iTunes Podcast RSS feed with Ghost","slug":"tutorial-one","content":"\n<p>Ghost comes with automatic RSS feeds for your content, but you can also create a custom feed using the flexible dynamic routing layer to support specific content types, like videos and podcasts.<br></p>\n\n\n\n<p>Adding&nbsp;<code>/rss/</code>&nbsp;to most URLs in Ghost produces an automatically generated RSS feed for your content. If you&#8217;re publishing a podcast on your Ghost site then you&#8217;ll probably want to create a custom RSS feed to distribute your podcast episodes to places like iTunes.</p>\n\n\n\n<p>This tutorial walks you through how to create a custom RSS route using dynamic routing, as well as a Handlebars template for your RSS feed that is fully optimised for a podcast and iTunes.</p>\n\n\n\n<h2 id=\"add-a-new-route-for-your-rss-feed\">Add a new route for your RSS feed</h2>\n\n\n\n<p>The first thing to do is add a new route where your RSS feed will exist in the using the dynamic routing layer in Ghost. Download the most up to date version of your&nbsp;<code>routes.yaml</code>file from Ghost Admin settings menu and open it in your code editor of choice.</p>\n\n\n\n<p>For the purposes of this example, we&#8217;re adding this to our podcast collection &#8211; here&#8217;s what it looks like:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>routes:\n  /podcast/rss/:\n    template: podcast/rss\n    content_type: text/xml\n</code></pre>\n\n\n\n<p>Note that this assumes we already have a collection in place for the podcast content, which would appear under collections in the&nbsp;<code>routes.yaml</code>&nbsp;file like so:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>collections:\n  /blog/:\n    permalink: /blog/{slug}/\n    filter: tag:blog+tag:-podcast\n  /podcast/:\n    permalink: /podcast/{slug}/\n    filter: tag:podcast+tag:-blog\n</code></pre>\n\n\n\n<p>If you haven&#8217;t yet setup your podcast content in Ghost, then you can use this tutorial on&nbsp;<a href=\"https://docs.ghost.org/tutorials/creating-content-collections/\">content collections</a>&nbsp;as a guide.</p>\n\n\n\n<h2 id=\"create-a-new-template-for-an-itunes-rss-feed\">Create a new template for an iTunes RSS feed</h2>\n\n\n\n<p>Now you&#8217;ve updated the&nbsp;<code>routes.yaml</code>, you&#8217;ll need to create a new Handlebars template in your theme. This requires a little bit of coding, but you can use the example provided in this tutorial as a starting point.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h3 id=\"define-your-podcast-channel-for-itunes\">Define your podcast channel for iTunes</h3>\n\n\n\n<p>In order for iTunes to understand your RSS feed, there a few basic requirements that you need to include at the start of your new template, which defines the type of RSS feed and some basic information about your podcast. Below is an example of the required information for an iTunes podcast, which you can copy into your own template and replace with necessary information:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;rss version=\"2.0\" xmlns:content=\"http://purl.org/rss/1.0/modules/content/\" xmlns:wfw=\"http://wellformedweb.org/CommentAPI/\"\n    xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:sy=\"http://purl.org/rss/1.0/modules/syndication/\"\n    xmlns:slash=\"http://purl.org/rss/1.0/modules/slash/\" xmlns:itunes=\"http://www.itunes.com/dtds/podcast-1.0.dtd\"\n    xmlns:rawvoice=\"http://www.rawvoice.com/rawvoiceRssModule/\" xmlns:googleplay=\"http://www.google.com/schemas/play-podcasts/1.0\">\n\n&lt;channel>\n&lt;title>{{@blog.title}}&lt;/title>\n&lt;link>{{@blog.url}}&lt;/link>\n&lt;description>{{@blog.description}}&lt;/description>\n&lt;language>{{lang}}&lt;/language>\n&lt;copyright>{{@blog.title}} Copyright {{date format=\"YYYY\"}}&lt;/copyright>\n&lt;atom:link href=\"{{@blog.url}}/podcast/rss/\" rel=\"self\" type=\"application/rss+xml\" />\n&lt;lastBuildDate>{{date format=\"ddd, DD MMM YYYY HH:mm:ss ZZ\"}}&lt;/lastBuildDate>\n&lt;itunes:author>{{@blog.title}}&lt;/itunes:author>\n&lt;itunes:summary>{{@blog.description}}&lt;/itunes:summary>\n&lt;itunes:owner>\n    &lt;itunes:name>Your Name&lt;/itunes:name>\n    &lt;itunes:email>youremail@example.com&lt;/itunes:email>\n&lt;/itunes:owner>\n&lt;itunes:explicit>clean&lt;/itunes:explicit>\n&lt;itunes:image href=\"{{img_url @blog.icon absolute=\"true\"}}\"/>\n&lt;itunes:category text=\"Technology\">&lt;/itunes:category>\n\n{{#get \"posts\" filter=\"tag:podcast\" include=\"tags,authors\" as |episode|}}\n    {{#foreach episode}}\n    &lt;item>\n        &lt;title>{{title}}&lt;/title>\n        &lt;link>{{url absolute=\"true\"}}&lt;/link>\n        &lt;pubDate>{{date format=\"ddd, DD MMM YYYY HH:mm:ss ZZ\"}}&lt;/pubDate>\n        &lt;guid isPermaLink=\"false\">{{id}}&lt;/guid>\n        &lt;category>&lt;![CDATA[ {{primary_tag}} ]]>&lt;/category>\n        &lt;description>{{custom_excerpt}}&lt;/description>\n        &lt;content:encoded>&lt;![CDATA[ {{content}} ]]>&lt;/content:encoded>\n        &lt;enclosure url=\"{{og_description}}\" length=\"0\" type=\"audio/mpeg\"/>\n        &lt;itunes:subtitle>{{custom_excerpt}}&lt;/itunes:subtitle>\n        &lt;itunes:summary>&lt;![CDATA[ {{content}} ]]>&lt;/itunes:summary>\n    &lt;/item>\n    {{/foreach}}\n{{/get}}\n\n&lt;/channel>\n&lt;/rss>\n</code></pre>\n\n\n\n<p>You can copy and paste this exact implementation for your site, then go ahead and customise it to suit your needs! There are a couple of static variables which need to be adjusted, like your name, email, and the iTunes category you want to appear in.</p>\n\n\n\n<p>There&#8217;s also one very small hack/workaround that makes all of this work: The feed requires that you specify the podcast mp3/audio file URL for each episode. Because Ghost doesn&#8217;t have custom fields, we can repurpose the&nbsp;<code>Facebook Description</code>&nbsp;field for each post to store the link to the audio file.</p>\n\n\n\n<p>So wherever you upload your audio to, just paste the provided URL into the Facebook Description and you should be all set.</p>\n\n\n\n<h2 id=\"update-routes-yaml-and-your-active-theme\"><strong>Update&nbsp;</strong><code>routes.yaml</code><strong>&nbsp;and your active theme</strong></h2>\n\n\n\n<p>Once you&#8217;re happy with your work, upload a new version of&nbsp;<code>routes.yaml</code>&nbsp;and update your active theme in Ghost Admin to enable your new RSS feed. Once you have done this, you should be able to visit the feed at&nbsp;<code>/podcast/rss/</code>&nbsp;to ensure it&#8217;s working as desired and submit it to iTunes.</p>\n\n\n\n<h3 id=\"summary\">Summary</h3>\n\n\n\n<p>Success! You should have implemented your very own custom iTunes RSS feed for podcast content on your Ghost site using dynamic routing and a Handlebars template. Don&#8217;t forget you can get more in-depth information about the Handlebars theme layer in Ghost in the&nbsp;<a href=\"https://docs.ghost.org/api/handlebars-themes/\">docs</a>.</p>\n\n\n\n<p><br></p>\n","excerpt":"<p>Ghost comes with automatic RSS feeds for your content, but you can also create a custom feed using the flexible dynamic routing layer to support specific content types, like videos and podcasts.</p>\n"}}]}},"pageContext":{}}