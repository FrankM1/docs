{"version":3,"sources":["webpack:///./src/components/faq/FAQLink.js","webpack:///./src/pages/faq.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["FAQLink","_ref","post","section","title","children","to","className","url","slug","excerpt","length","substring","react_default","a","createElement","gatsby_browser_entry","Spirit","small","replace","defaultProps","propTypes","PropTypes","shape","string","isRequired","node","__webpack_require__","d","__webpack_exports__","pageQuery","FAQPage","data","location","imageUrl","getMetaImageUrls","Fragment","meta","type","description","image","layout","headerDividerStyle","page","xl","h4","allWordpressWpFaq","edges","map","_ref2","faq_FAQLink","key","id","site","siteMetadata","siteUrl","pathname","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","name","sameAsArray","join","profile_image","bool","ImageMeta","Helmet_default","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","wordpressPost","author","primary_author","seoImage","feature_image","meta_title","meta_description","rel","href","og_title","og_description","date","modified","publicTags","keyword","i","twitter_title","twitter_description","meta_ImageMeta","object","tags","arrayOf","visibility","primaryTag","ArticleMetaMD","markdownRemark","fm","frontmatter","publishedAtISODate","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","resolve","meta_ArticleMetaGhost","meta_ArticleMetaMD","meta_WebsiteMeta","SITEURL","process","SITE_URL","imageUrls","faq","integrations","tutorials","default","proptypes","meta_MetaData","meta_getMetaImageUrls"],"mappings":"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","file":"component---src-pages-faq-js-b9828455c3aced1cb747.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst FAQLink = ({ post, section, title, children, to, className }) => {\n    const url = post ? `/${section}/${post.slug}/` : to\n    title = post ? post.title : title\n    const excerpt = post ?\n        post.excerpt.length > 200 ? `${post.excerpt.substring(0, 200)}...` : post.excerpt\n        : children\n\n    return (\n        <Link to={url} className={className}>\n            <h4 to={url} className={`${Spirit.excerpt} link darkgrey fw5`}>{title} &raquo;</h4>\n            {excerpt && <p className={`${Spirit.small} ma0 f8 lh-copy middarkgrey mb6`}>{excerpt.replace(/<.+?>/g, '')}</p>}\n        </Link>\n    )\n}\nFAQLink.defaultProps = {\n    className: `f5 db tdn mb6 faq-question bb b--whitegrey`,\n    section: `faq`,\n}\n\nFAQLink.propTypes = {\n    post: PropTypes.shape({\n        title: PropTypes.string,\n        slug: PropTypes.string,\n        excerpt: PropTypes.string,\n    }),\n    section: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    children: PropTypes.node,\n    to: PropTypes.string,\n    className: PropTypes.string,\n}\n\nexport default FAQLink\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { Spirit } from '../styles/spirit-styles'\nimport { FAQTagList, FAQLink } from '../components/faq'\nimport { Layout } from '../components/common/layout'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\n\nconst FAQPage = ({ data, location }) => {\n    // Add meta title and description for this page here to overwrite the site meta data as set in the config\n    const title = `FAQ - Ghost`\n    const description = `Answers to our most popular questions: billing, hosting, troubleshooting and more.`\n    const imageUrl = getMetaImageUrls(`faq`)\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title}\n                description={description}\n                image={imageUrl}\n            />\n            <Layout headerDividerStyle=\"shadow\">\n                <div className=\"bg-faq bb b--whitegrey\">\n                    <div className={`${Spirit.page.xl} pt-vw7 pt-vw1-ns pb-vw1`}>\n                        <h1 className={`${Spirit.h4} white`}>Frequently Asked Questions</h1>\n                    </div>\n                </div>\n                <div className={`${Spirit.page.xl} grid-12`}>\n                    <div className=\"bg-white shadow-2 br4 mt5 mt10-ns pa5 pa15-ns pt10-ns pb12-ns col-12 col-8-ns\">\n                        {data.allWordpressWpFaq.edges.map( ( { node }) =>\n                            <FAQLink key={node.id} to={`faq/` + node.slug}  post={node} />\n                        )}\n                    </div>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nFAQPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default FAQPage\n\nexport const pageQuery = graphql`\n    query WordpressFAQQuery {\n        site {\n            siteMetadata {\n              title\n              siteUrl\n              description\n            }\n          }\n        allWordpressWpFaq {\n            edges {\n              node {\n                id\n                title\n                slug\n                content\n                excerpt\n              }\n            }\n        }\n    }\n`\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://qazana.net/`,\n            `https://twitter.com/ghost/`,\n            `https://www.facebook.com/ghost/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Qazana`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { wordpressPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(wordpressPost.primary_author, fetchAuthorData)\n    const primaryTag = { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && wordpressPost.feature_image) ? wordpressPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{wordpressPost.meta_title || title || wordpressPost.title}</title>\n                <meta name=\"description\" content={wordpressPost.meta_description || wordpressPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        wordpressPost.og_title ||\n                        title ||\n                        wordpressPost.meta_title ||\n                        wordpressPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        wordpressPost.og_description ||\n                        wordpressPost.excerpt ||\n                        wordpressPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={wordpressPost.date} />\n                <meta property=\"article:modified_time\" content={wordpressPost.modified} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        wordpressPost.twitter_title ||\n                        title ||\n                        wordpressPost.meta_title ||\n                        wordpressPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        wordpressPost.twitter_description ||\n                        wordpressPost.excerpt ||\n                        wordpressPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${wordpressPost.meta_title || title || wordpressPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${wordpressPost.date}\",\n                        \"dateModified\": \"${wordpressPost.modified}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${wordpressPost.meta_description || wordpressPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Qazana\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.qazana.net/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        wordpressPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            date: PropTypes.string.isRequired,\n            modified: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport ImageMeta from './ImageMeta'\nimport { getMetaImageUrls } from '.'\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Qazana\",\n                            \"sameAs\": [\n                                \"https://qazana.net/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/tryghost/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Qazana\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://blog.qazana.net/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nimport ImageMeta from './ImageMeta'\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={image} />\n        </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Qazana\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.qazana.net/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n\n    const { wordpressPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (wordpressPost) {\n            return (\n                <ArticleMetaGhost\n                    data={data}\n                    canonical={canonical}\n                    fetchAuthorData={fetchAuthorData}\n                    title={title}\n                    image={image}\n                    overwriteDefaultImage={overwriteDefaultImage}\n                />\n            )\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        wordpressPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types'\nimport url from 'url'\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.qazana.net`\n\nconst imageUrls = {\n    faq: url.resolve(SITEURL, `/images/meta/Qazana-FAQ.jpg`),\n    integrations: url.resolve(SITEURL, `/images/meta/Qazana-Integrations.jpg`),\n    tutorials: url.resolve(SITEURL, `/images/meta/Qazana-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/Qazana-Docs.jpg`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}